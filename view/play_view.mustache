{{#isEditor}}
    {{> header_editor}}
{{/isEditor}}

{{#isAdmin}}
    {{> header_admin}}
{{/isAdmin}}
{{#isUser}}
    {{> header_loged}}
{{/isUser}}

<!-- The Band Section -->

        {{#userData}}
        <!-- The User Section -->
        <div class="container">
            <h1>Detalles del usuario</h1>
            <ul class="list-group">
                <li class="list-group-item">Nombre : {{FullName}}</li>
                <li class="list-group-item">Nivel : {{nivel}}</li>
            </ul>

        </div>
        {{/userData}}
    {{#userGame}}
        {{^isFinishResult}}  
            {{#question}}
            <div class="container mt-1">
                <div class="row justify-content-center">
                    <div class="col-md-6">
                        <h3 class="text-center">Tiempo de juego</h3>
                        <div class="progress">
                            <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                        <p class="text-center mt-2" id="countdown">Tiempo restante: 0 segundos</p>
                    </div>
                </div>
            </div>
            {{#dificultyDiference}}
            <div class="container">
                <div class="row">
                    <div class="col-md-6 offset-md-3">
                        <div class="card mt-1">
                            <div class="card-header text-white" style="background-color:{{CategoryColor}}">
                                <h2>No hay preguntas con tu dificultad</h2>
                            </div>
                            <p>Se selecciono una pregunta al azar</p>
                        </div>
                    </div>
                </div>
            </div>
            {{/dificultyDiference}}  
                    <div class="container">
                        <div class="row">
                            <div class="col-md-6 offset-md-3">
                                <div class="card mt-1">

                                    <div class="card-header text-white" style="background-color:{{CategoryColor}}">
                                        <p>Categor√≠a: {{CategoryName}}</p>
                                        <p>Dificultad: {{Difficulty}}</p>
                                    </div>
                                    <div class="card-body">
                                        <h5 class="card-title">{{QuestionText}}</h5>
                                        <form action="/game/play" method="post">
                                            <ul class="list-group">
                                                {{#questionAnswers}}
                                                <li class="list-group-item">
                                                    <input class="form-check-input" type="radio" name="answer" id="answer{{@index}}" value="{{.}}">
                                                    <label class="form-check-label" for="answer{{@index}}">{{.}}</label>
                                                </li>
                                                {{/questionAnswers}}
                                            </ul>
                                            <input type="text" name="id" value="{{QuestionID}}" id="QuestionID" style="display:none">
                                            <button type="submit" class="btn btn-primary">Responder</button>
                                            
                                            
                                        </form>
                                        <button onclick="juego.sendReportQuestion()"  class="btn btn-primary">Reportar pregunta</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <script>
                        class Play {
                            constructor(duration) {
                                this.duration = duration;
                                this.timerId = null;
                                this.progressBar = document.getElementById('progressBar');
                                this.countdownText = document.getElementById('countdown');
                                //document.getElementById("botones").innerHTML += '<button onclick="juego.sendReportQuestion()"  class="btn btn-primary">Reportar pregunta</button>';
                            }

                            start() {
                                let startTime = Date.now();
                                let endTime = startTime + this.duration * 1000;

                                this.timerId = setInterval(() => {
                                    let currentTime = Date.now();
                                    let timeLeft = endTime - currentTime;

                                    if (timeLeft <= 0) {
                                        clearInterval(this.timerId);
                                        this.progressBar.style.width = '100%';
                                        this.progressBar.classList.remove('bg-success');
                                        this.progressBar.classList.add('bg-danger');
                                        this.countdownText.textContent = 'Tiempo terminado';
                                        setTimeout(() => {
                                            this.sendPostRequest(); 
                                        }, 500);
                                        // se le dejo medio segundo para compensar los tiempos de carga
                                    } else {
                                        let progress = 100 - (timeLeft / this.duration / 10);
                                        this.progressBar.style.width = progress + '%';
                                        
                                        if (progress >= 40 && progress <= 70) {
                                            this.progressBar.classList.remove('bg-success');
                                            this.progressBar.classList.add('bg-warning');
                                        } else if(progress > 70){
                                            this.progressBar.classList.remove('bg-warning');
                                            this.progressBar.classList.add('bg-danger');
                                        }
                                        else {
                                            this.progressBar.classList.remove('bg-warning');
                                            this.progressBar.classList.add('bg-success');
                                        }
                                        this.countdownText.textContent = Math.ceil(timeLeft / 1000) + ' segundos restantes';
                                    }
                                }, 100);
                            }

                            stop() {
                                clearInterval(this.timerId);
                            }
                            sendPostRequest() {
                                const url = '/game/play'; 
                                const form = document.createElement('form');
                                form.method = 'post';
                                form.action = url;

                                const userResponseInput = document.createElement('input');
                                userResponseInput.type = 'hidden';
                                userResponseInput.name = 'userResponse';
                                userResponseInput.value = 'false';
                                form.appendChild(userResponseInput);

                                const idInput = document.createElement('input');
                                idInput.type = 'hidden';
                                idInput.name = 'id';
                                idInput.value = '{{QuestionID}}'; 
                                form.appendChild(idInput);

                                document.body.appendChild(form);
                                form.submit();
                            }
                            sendReportQuestion() {
                                const urlReport = '/game/reportQuestion?id={{QuestionID}}'; 
                                window.open(urlReport, '_blank');
                                //cuando reporta pregunta refrescar mediante un post el juego y abrir formulario de respuesta reportada
                                const url = '/game/play'; 
                                const form = document.createElement('form');
                                form.method = 'post';
                                form.action = url;

                                const userReplayInput = document.createElement('input');
                                userReplayInput.type = 'hidden';
                                userReplayInput.name = 'userReplay';
                                userReplayInput.value = 'true';
                                form.appendChild(userReplayInput);

                                const idInput = document.createElement('input');
                                idInput.type = 'hidden';
                                idInput.name = 'id';
                                idInput.value = '{{QuestionID}}'; 
                                form.appendChild(idInput);

                                document.body.appendChild(form);
                                form.submit();
                            }
                        }

                        const countdownDuration = {{time}}; // trae la cantidad de segundos del backend
                        const juego = new Play(countdownDuration);
                        if(juego.progressBar != null){
                            juego.start();
                        }
                    </script>
            {{/question}}
        {{/isFinishResult}}
    {{#cheat}}
    <div class="container">
        <div class="row">
            <div class="col-md-6 offset-md-3">
                <div class="card mt-1">
                    <div class="card-header text-white" style="background-color:red">
                        <h2>Te estas portando mal seras castigade</h2>
                    </div>
                    <p>La partida se perdio por refrescar la pagina, no lo vuelvas a hacer</p>
                </div>
            </div>
        </div>
    </div>
    {{/cheat}}
    {{#tiempo}}
    <div class="container">
        <div class="row">
            <div class="col-md-6 offset-md-3">
                <div class="card mt-1">
                    <div class="card-header text-white" style="background-color:yellow">
                        <h2>Se acabo el tiempo</h2>
                    </div>
                    <p>La partida se perdio por que se acabo el tiempo, animos la proxima</p>
                </div>
            </div>
        </div>
    </div>
    {{/tiempo}}
      
    {{#isFinishResult}} 
        <div class="container">
            <div class="row">
                <div class="col-md-6 offset-md-3 mt-3">
                    <h2>Fin del juego</h2>
                </div>
            </div>
        </div>
    {{/isFinishResult}} 

    <div class="container">
        <div class="row">
            <div class="col-md-6 offset-md-3 mt-3">
                <div class="card">
                    <div class="card-header">
                        Informaci√≥n de la partida
                    </div>
                    <div class="card-body">
                        <ul class="list-group">
                            <li class="list-group-item"><strong>ID de la partida:</strong> {{GameID}}</li>
                            <li class="list-group-item"><strong>Estado:</strong> {{Result}}</li>
                            <li class="list-group-item"><strong>Fecha y hora de inicio:</strong> {{Timestamp}}</li>
                            <li class="list-group-item"><strong>N√∫mero de preguntas:</strong> {{NumQuestions}}</li>
                            <li class="list-group-item"><strong>Puntuaci√≥n:</strong> {{Score}}</li>
                        </ul>
                    </div>
                    {{#isFinishResult}} 
                    <div class="card-footer text-muted">
                        <a href="/user/lobby" class="btn btn-primary">Ir al lobby</a>
                    </div>
                    {{/isFinishResult}}
                </div>
            </div>
        </div>
    </div>
    {{/userGame}}


<!-- End Page Content -->
</div>

{{> footer}}